"""
Django settings for backendpandacar project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nad2nz^fsmf^+vcd=l9k5&&wj@3dcuu5@axa2fls3##pwa1p8^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Update allowed hosts to include your Elastic Beanstalk domain
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '.elasticbeanstalk.com', '.amazonaws.com']


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third-party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'corsheaders',
    
    # Local apps
    'api',
]

MIDDLEWARE = [
    # CORS middleware should be at the top
    "corsheaders.middleware.CorsMiddleware", 
    "django.middleware.common.CommonMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
]

# CORS Settings - Update to include your Elastic Beanstalk domain
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',
    'http://127.0.0.1:5173',
    'https://your-frontend-domain.com'  # Add your frontend domain if deployed separately
]

CORS_ALLOW_CREDENTIALS = True

# More permissive settings for development
CORS_ALLOW_ALL_ORIGINS = True  # Only for development!
CORS_ALLOW_METHODS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'cache-control',
    'pragma',
]

ROOT_URLCONF = 'backendpandacar.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backendpandacar.wsgi.application'


# Database - Update to use RDS PostgreSQL
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('RDS_DB_NAME', ''),
        'USER': os.environ.get('RDS_USERNAME', 'ebroot'),  # Default username from your EB config
        'PASSWORD': os.environ.get('RDS_PASSWORD', 'Silver1999'),  # Your database password
        'HOST': os.environ.get('RDS_HOSTNAME', ''),
        'PORT': os.environ.get('RDS_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model
AUTH_USER_MODEL = 'api.User'

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'backendpandacar.custom_classes.CustomAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.ScopedRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '20/min',  # anonymous user limit
        'user': '50/min',  # user limit
        'custom_login': '20/min',  # login endpoint limit 
        'custom_cars': '10/min',  # get_cars endpoint limit
        'custom_availability': '10/min',  # get_availability endpoint limit
        'custom_users': '10/min',  # get_users endpoint limit
        'custom_add_to_favorites': '20/min',  # add_to_favorites endpoint limit
        'custom_add_to_cart': '10/min',  # add_to_cart endpoint limit
        'custom_get_to_favorites': '20/min',  # get_to_favorites endpoint limit
        'custom_get_cart': '10/min',  # get_cart endpoint limit
    },
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ),
}

# JWT settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),  # Extended for development
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    "AUTH_COOKIE": "access_token",  
    "AUTH_COOKIE_DOMAIN": None,  # No domain restriction for local dev
    "AUTH_COOKIE_SECURE": False,  # Must be False for HTTP in development
    "AUTH_COOKIE_HTTP_ONLY": True,  
    "AUTH_COOKIE_PATH": "/",  
    "AUTH_COOKIE_SAMESITE": None,  # Use Python None, not string 'None'

    "AUTH_COOKIE_REFRESH_TOKEN": "refresh_token",  
    "AUTH_COOKIE_REFRESH_TOKEN_DOMAIN": None,
    "AUTH_COOKIE_REFRESH_TOKEN_SECURE": False,  # Must be False for HTTP in development
    "AUTH_COOKIE_REFRESH_TOKEN_HTTP_ONLY": True,  
    "AUTH_COOKIE_REFRESH_TOKEN_PATH": "/",  
    "AUTH_COOKIE_REFRESH_TOKEN_SAMESITE": None,  # Use Python None, not string 'None'
    
    "TOKEN_BLACKLIST": True
}

# CSRF settings - Update to include your Elastic Beanstalk domain
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173", 
    'http://127.0.0.1:5173',
    'https://*.elasticbeanstalk.com',
    'https://*.amazonaws.com'
]

# Security settings for development
SECURE_SSL_REDIRECT = False
SESSION_COOKIE_SAMESITE = None  # Python None, not string 'None'
SESSION_COOKIE_SECURE = False  # Must be False for HTTP in development
CSRF_COOKIE_SECURE = False  # Must be False for HTTP in development
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = None  # Python None, not string 'None'

# AWS Settings (for Lambda, API Gateway, SNS, SQS integration)
AWS_REGION = 'us-east-1'
AWS_API_GATEWAY_URL = 'https://ozado4x5ci.execute-api.us-east-1.amazonaws.com/Dev'
AWS_SNS_TOPIC_ARN = 'arn:aws:sns:us-east-1:543952390368:CarBookingNotifications'
AWS_SQS_QUEUE_URL = 'https://sqs.us-east-1.amazonaws.com/543952390368/CarBookingQueue'

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
        'api': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}